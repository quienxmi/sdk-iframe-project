{"version":3,"file":"qxm-iframe-project.umd.js","sources":["../src/constants/errors.ts","../src/utils/checkOrigin.ts","../src/constants/allowedDomains.ts","../src/utils/checkDomain.ts","../src/utils/decodeToken.ts","../src/index.ts"],"sourcesContent":["import { Errors } from '../interfaces/index';\n\nconst errors: Errors = {\n    SDK_CREATE: 'The SDK could not be found.',\n    IFRAME_NOT_FOUND: 'The specified iframe could not be found.',\n    EXPIRED_TOKEN: 'Your token has expired. Please generate a new one.',\n    DOM_NOT_IFRAME: 'Cannot build the iframe as the DOM element is not an iframe.',\n    INVALID_TOKEN: 'The token is invalid or has expired. Please generate a new token.',\n    INVALID_ORIGIN: 'The origin of the source is not supported.',\n    INVALID_DOMAIN: 'The domain of the source is not supported.',\n    ERROR_LOADING_IFRAME: 'Failed to load the iframe correctly.'\n};\n\nexport default errors;","export function checkOrigin(url: string): boolean {\n    try {\n        const providedOrigin = new URL(url).origin;\n        return providedOrigin === window.location.origin;\n    } catch (err) {\n        return false;\n    }\n}","export default [\n    '.sandboxqxm.com',\n    '.quienpormi.com',\n    '.quienxmi.com',\n    '.qxm.com.'\n];","import AllowedDomains from '../constants/allowedDomains';\n\nexport function checkDomain(url: string): boolean {\n    try {\n        const parsedUrl = new URL(url);\n\n        if (parsedUrl.hostname === 'localhost') {\n            return parsedUrl.port === '8000';\n        }\n\n        if (parsedUrl.protocol !== 'https:') {\n            return false;\n        }\n\n        const hostname = parsedUrl.hostname;\n        return AllowedDomains.some(domain => {\n            if (domain.endsWith('.')) {\n                return hostname.slice(0, -2).endsWith(domain);\n            }\n            return hostname.endsWith(domain);\n        });\n    } catch (err) {\n        return false;\n    }\n}","import { DecodedToken } from '../interfaces/index';\n\nconst requiredKeys = [\n    'iss',\n    'iat',\n    'exp',\n    'data'\n];\n\nfunction checkKeysInObject(jsonPayload: DecodedToken): boolean {\n    const payloadKeys = Object.keys(jsonPayload);\n    return requiredKeys.every(key => payloadKeys.includes(key));\n}\n\nexport function decodeToken(token: string) {\n    try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload: DecodedToken = JSON.parse(decodeURIComponent(atob(base64).split('').map(function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join('')));\n        const currentTime = Math.floor(Date.now() / 1000);\n        if (jsonPayload.exp > currentTime && checkKeysInObject(jsonPayload)) {\n            return jsonPayload;\n        }\n        return null;\n    } catch (err) {\n        return null;\n    }\n}","import './interfaces/global.d';\nimport Errors from './constants/errors';\nimport { Config, SubscriptionTypes, Observer, DecodedToken, EventObserver, EventObserverError } from './interfaces/index';\nimport { checkOrigin } from './utils/checkOrigin';\nimport { checkDomain } from './utils/checkDomain';\nimport { decodeToken } from './utils/decodeToken';\nimport { version } from '../package.json';\n\nconst observersStructure: Observer = {\n    all: [],\n    resize: [],\n    event: [],\n    error: []\n};\n\nclass QxmIframeProject {\n    public _domIframe?: HTMLIFrameElement;\n    public _observers: Observer = observersStructure;\n\n    private _checkExp?: number | NodeJS.Timeout;\n    private _logs = false;\n\n    constructor(\n        domOrStringIframe: HTMLIFrameElement | string,\n        config: Config | null\n    ) {\n        try {\n            const { scrolling, resize, logs } = config ?? {};\n\n            if (typeof domOrStringIframe === 'string') {\n                this._domIframe = document.querySelector(domOrStringIframe)!;\n            } else {\n                this._domIframe = domOrStringIframe;\n            }\n\n            if (logs === true) {\n                this._logs = true;\n            }\n\n            if (this._logs) {\n                console.info('[QxmIframe]: Version ' + version)\n            }\n\n            if (!this._domIframe) {\n                this.pushError('IFRAME_NOT_FOUND');\n                return;\n            }\n\n            if (!(this._domIframe instanceof HTMLIFrameElement)) {\n                this.pushError('DOM_NOT_IFRAME');\n                return;\n            }\n\n            this._domIframe.setAttribute('frameborder', '0');\n\n            if (!(scrolling || false)) {\n                this._domIframe.setAttribute('scrolling', 'no');\n            }\n\n            this.createListener();\n\n            if (resize ?? true) {\n                this.subscribe('resize', this.resize);\n            }\n        } catch (e: any) {\n            this.pushError('SDK_CREATE', null, e);\n            this.destroy();\n        }\n    }\n\n    subscribe(type: SubscriptionTypes = 'all', callback: Function) {\n        this._observers[type].push(callback);\n    }\n\n    subscribeError(callback: Function) {\n        this.subscribe('error', callback);\n    }\n\n    subscribeEvent(callback: Function) {\n        this.subscribe('event', callback);\n    }\n\n    async setToken(token: string): Promise<DecodedToken | null> {\n        token = token.trim();\n        const decodedToken: DecodedToken | null = decodeToken(token);\n        clearInterval(this._checkExp);\n\n        if (!decodedToken) {\n            this.pushError('INVALID_TOKEN');\n            return null;\n        }\n\n        if (decodedToken.aud && !checkOrigin(decodedToken.aud)) {\n            this.pushError('INVALID_ORIGIN');\n            return null;\n        }\n\n        if (!checkDomain(decodedToken.iss)) {\n            this.pushError('INVALID_DOMAIN');\n            return null;\n        }\n\n        this._checkExp = setInterval(() => {\n            const now = Math.floor(Date.now() / 1000);\n            if (decodedToken.exp < now) {\n                clearInterval(this._checkExp);\n                this.pushError('EXPIRED_TOKEN');\n            }\n        }, 1000);\n\n        if (!await this.setSrcIframe(decodedToken.iss, token)) {\n            return null;\n        }\n\n        return decodedToken;\n    }\n\n    destroy() {\n        this._domIframe = undefined;\n        this._observers = observersStructure;\n        clearInterval(this._checkExp);\n    }\n\n    private setSrcIframe(domain: string, token: string): Promise<boolean> {\n        return new Promise((resolve) => {\n            const domIframe = this._domIframe!;\n\n            const onLoad = () => {\n                clearEvents();\n                resolve(true);\n            };\n\n            const onError = () => {\n                this.pushError('ERROR_LOADING_IFRAME');\n                clearEvents();\n                resolve(false);\n            };\n\n            const clearEvents = () => {\n                domIframe.removeEventListener('load', onLoad);\n                domIframe.removeEventListener('error', onError);\n            }\n\n            try {\n                domIframe.src = domain + '/api/iframe/project/create?token=' + token;\n                domIframe.addEventListener('load', onLoad);\n                domIframe.addEventListener('error', onError);\n            } catch (err) {\n                onError();\n            }\n        });\n    }\n\n    private createListener() {\n        window.addEventListener('message', (event: MessageEvent) => {\n            const { origin, data } = event;\n            if (checkDomain(origin)) {\n                if (this._logs) {\n                    console.log('[QxmIframe]:', data);\n                }\n                let type = data.type ?? 'all';\n                if (!this._observers[type]) {\n                    type = 'all';\n                }\n                if (type === 'error') {\n                    this.pushError(data.code, data.message);\n                    return;\n                }\n                this._observers[type].forEach((observer: Function) => observer({\n                    _domIframe: this._domIframe,\n                    data\n                } as EventObserver));\n            }\n        });\n    }\n\n    private pushError(code: string, message: string | null = null, error: any = null) {\n        if (!message) {\n            message = Errors[code] ?? code;\n        } \n        if (this._logs) {\n            console.error('[QxmIframe]:', message, error);\n        }\n        this._observers.error.forEach((observer: Function) => observer({\n            _domIframe: this._domIframe,\n            code,\n            message,\n            error\n        } as EventObserverError));\n    }\n\n    private resize(event: EventObserver) {\n        const { _domIframe, data } = event;\n        const styles = window.getComputedStyle(_domIframe);\n        const iframePadding = parseInt(styles.paddingTop) + parseInt(styles.paddingBottom);\n        _domIframe.style.setProperty('height', `${data.height + iframePadding}px`, 'important');\n    }\n}\n\nif (typeof window !== 'undefined') {\n    window.QxmIframeProject = QxmIframeProject;\n}\n\nexport default QxmIframeProject;"],"names":["errors","checkOrigin","url","AllowedDomains","checkDomain","parsedUrl","hostname","domain","requiredKeys","checkKeysInObject","jsonPayload","payloadKeys","key","decodeToken","token","base64","c","currentTime","observersStructure","QxmIframeProject","domOrStringIframe","config","__publicField","scrolling","resize","logs","version","e","type","callback","decodedToken","now","resolve","domIframe","onLoad","clearEvents","onError","event","origin","data","observer","code","message","error","Errors","_domIframe","styles","iframePadding"],"mappings":"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"}